[{"/Users/shige11910/notion-clone/frontend/src/index.tsx":"1","/Users/shige11910/notion-clone/frontend/src/reportWebVitals.ts":"2","/Users/shige11910/notion-clone/frontend/src/Home.tsx":"3","/Users/shige11910/notion-clone/frontend/src/App.tsx":"4","/Users/shige11910/notion-clone/frontend/src/firebase.tsx":"5","/Users/shige11910/notion-clone/frontend/src/AuthContext.tsx":"6","/Users/shige11910/notion-clone/frontend/src/SignUp.tsx":"7","/Users/shige11910/notion-clone/frontend/src/Home1.tsx":"8","/Users/shige11910/notion-clone/frontend/src/Login.tsx":"9","/Users/shige11910/notion-clone/frontend/src/Content.tsx":"10","/Users/shige11910/notion-clone/frontend/src/Editor.tsx":"11","/Users/shige11910/notion-clone/frontend/src/App2.tsx":"12","/Users/shige11910/notion-clone/frontend/src/List.tsx":"13"},{"size":503,"mtime":1639554090300,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1639400816745,"results":"16","hashOfConfig":"15"},{"size":310,"mtime":1639402284810,"results":"17","hashOfConfig":"15"},{"size":656,"mtime":1639579716199,"results":"18","hashOfConfig":"15"},{"size":937,"mtime":1639571239475,"results":"19","hashOfConfig":"15"},{"size":1101,"mtime":1639460072970,"results":"20","hashOfConfig":"15"},{"size":3136,"mtime":1639460201255,"results":"21","hashOfConfig":"15"},{"size":4243,"mtime":1639644927091,"results":"22","hashOfConfig":"15"},{"size":2430,"mtime":1639461355182,"results":"23","hashOfConfig":"15"},{"size":604,"mtime":1639642310913,"results":"24","hashOfConfig":"15"},{"size":1932,"mtime":1639651217053,"results":"25","hashOfConfig":"15"},{"size":766,"mtime":1639549370807,"results":"26","hashOfConfig":"15"},{"size":1113,"mtime":1639643982222,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"x0109b",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/Users/shige11910/notion-clone/frontend/src/index.tsx",[],["62","63"],"/Users/shige11910/notion-clone/frontend/src/reportWebVitals.ts",[],"/Users/shige11910/notion-clone/frontend/src/Home.tsx",["64"],"import React from 'react';\nimport logo from './logo.svg';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n        <div className='list'>\n          list\n        </div>\n        <div className='contents'>\n          contents\n        </div>\n    </div>\n    \n  );\n}\nexport default Home;\n",["65","66"],"/Users/shige11910/notion-clone/frontend/src/App.tsx",["67"],"// import \"./App.css\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { AuthProvider } from \"./AuthContext\";\nimport Home from \"./Home\";\nimport Home1 from \"./Home1\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<AuthProvider>\n\t\t\t\t\t<Route exact path=\"/\" component={Home1} />\n\t\t\t\t\t{/* <Route exact path=\"/\" component={Home} /> */}\n\t\t\t\t\t<Route exact path=\"/signup\" component={SignUp} />\n\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t</AuthProvider>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","/Users/shige11910/notion-clone/frontend/src/firebase.tsx",[],"/Users/shige11910/notion-clone/frontend/src/AuthContext.tsx",[],"/Users/shige11910/notion-clone/frontend/src/SignUp.tsx",["68"],"import React, { Fragment, useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\n\n// authサービスをインポート\nimport {auth} from \"./firebase\";\n\nconst SignUp = (props: any) => {\n  // ここではuseStateというHooksの機能を利用している\n  // フォームに入力された値を保持する変数を宣言する形\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  // useEffectもHooksの機能。ここではページがロードされたタイミングで\n  // ログイン状態かどうかを判定するイベントを発動する\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      // ログインしている場合、ホームへリダイレクト\n      user && props.history.push(\"/\");\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <Container>\n        <Grid container>\n          <Grid item md={4}></Grid>\n          <Grid item md={4}>\n            <FormControl margin=\"normal\" fullWidth>\n              <TextField\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                name=\"email\"\n                label=\"E-mail\"\n                fullWidth\n                variant=\"outlined\"\n                value={email}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEmail(event.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <TextField\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                name=\"password\"\n                label=\"Password\"\n                fullWidth\n                variant=\"outlined\"\n                type=\"password\"\n                value={password}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setPassword(event.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <Button\n                fullWidth\n                onClick={async () => {\n                  try {\n                    // Firebaseにユーザーを作成する\n                    await auth.createUserWithEmailAndPassword(email, password);\n                    // sendSignInLinkToEmail() を利用すると、メールアドレス認証のためのメールを送信することも可能\n                    props.history.push(\"/\");\n                  } catch (error) {\n                    // ユーザー作成が失敗するとその内容をアラート表示\n                    alert(error);\n                  }\n                }}\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n              >\n                Sign up\n              </Button>\n              <Typography align=\"center\">\n                <Link href=\"/login\">to login</Link>\n              </Typography>\n            </FormControl>\n          </Grid>\n          <Grid item md={4}></Grid>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default SignUp;","/Users/shige11910/notion-clone/frontend/src/Home1.tsx",["69","70","71","72"],"/Users/shige11910/notion-clone/frontend/src/Login.tsx",["73"],"import React, { Fragment, useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\n\nimport { auth } from \"./firebase\";\n\nconst Login = (props: any) => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  useEffect(() => {\n    // if logged in, redirect to home\n    auth.onAuthStateChanged(user => {\n      user && props.history.push(\"/\");\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <Container>\n        <Grid container>\n          <Grid item md={4}></Grid>\n          <Grid item md={4}>\n            <FormControl margin=\"normal\" fullWidth>\n              <TextField\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                name=\"email\"\n                label=\"E-mail\"\n                fullWidth\n                variant=\"outlined\"\n                value={email}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEmail(event.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <TextField\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                name=\"password\"\n                label=\"Password\"\n                fullWidth\n                variant=\"outlined\"\n                type=\"password\"\n                value={password}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setPassword(event.target.value);\n                }}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <Button\n                fullWidth\n                onClick={async () => {\n                  try {\n                    await auth.signInWithEmailAndPassword(email, password);\n                    props.history.push(\"/\");\n                  } catch (error) {\n                    alert(error);\n                  }\n                }}\n                style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n              >\n                Login\n              </Button>\n            </FormControl>\n            <Typography align=\"center\">\n              <Link href=\"/signup\">to signup</Link>\n            </Typography>\n          </Grid>\n          <Grid item md={4}></Grid>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Login;","/Users/shige11910/notion-clone/frontend/src/Content.tsx",["74","75","76","77","78","79","80","81"],"import {\n\tButton,\n\tContainer,\n\tFormControl,\n\tGrid,\n\tLink,\n\tTextField,\n\tTypography,\n} from \"@material-ui/core\";\n\nconst Content = (props: any) => {\n\tconst note = props.note;\n\tconst index = props.index;\n\t// console.log(index);\n\n\tconst Handle_test = () => {\n\t\t// console.log(note.id);\n\t\tprops.selectNote(note);\n\t};\n\n\tconst deleteNote = () => {\n\t\tprops.deleteNote(note);\n\t};\n\n\treturn (\n\t\t<div className=\"List_Block\">\n\t\t\t<div className=\"list\" onClick={Handle_test}>\n\t\t\t\t{note.title}\n\t\t\t</div>\n\t\t\t<button className=\"button\" onClick={deleteNote}>\n\t\t\t\tdelete\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Content;\n","/Users/shige11910/notion-clone/frontend/src/Editor.tsx",["82","83","84","85","86","87","88","89","90","91"],"/Users/shige11910/notion-clone/frontend/src/App2.tsx",["92","93"],"/Users/shige11910/notion-clone/frontend/src/List.tsx",["94","95","96","97","98"],"import React, { Fragment, useEffect, useState } from \"react\";\n\nfunction List(props: any) {\n\tconst { classes, notes, selectedNoteIndex } = props;\n\tconst [addingNote, setAddingNote] = useState(false);\n\tconst [title, setTitle] = useState(\"\");\n\n\tconst newNoteBtnClick = () => {\n\t\tsetAddingNote(!addingNote);\n\t\tconsole.log(addingNote);\n\t};\n\n\tconst updateTitle = (txt: string) => {\n\t\tsetTitle(txt);\n\t};\n\n\tconst newNote = () => {\n\t\tprops.newNote(title);\n\t\tsetTitle(\"\");\n\t\tsetAddingNote(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{addingNote ? (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t//   className={newNoteInput}\n\t\t\t\t\t\tplaceholder=\"ノートのタイトル\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(\n\t\t\t\t\t\t\tevent: React.ChangeEvent<HTMLInputElement>\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tupdateTitle(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t// className={classes.newNoteSubmitBtn}\n\t\t\t\t\t\tonClick={newNote}\n\t\t\t\t\t>\n\t\t\t\t\t\tノートを作成する\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<button onClick={newNoteBtnClick}>\n\t\t\t\t{addingNote ? \"キャンセル\" : \"新規ノート\"}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default List;\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","severity":1,"message":"109","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":29,"column":6,"nodeType":"112","endLine":29,"endColumn":8,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":11,"column":9,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"116","line":11,"column":19,"nodeType":"105","messageId":"106","endLine":11,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":46,"column":5,"nodeType":"112","endLine":46,"endColumn":7,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":24,"column":6,"nodeType":"112","endLine":24,"endColumn":8,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"119","line":2,"column":2,"nodeType":"105","messageId":"106","endLine":2,"endColumn":8},{"ruleId":"103","severity":1,"message":"120","line":3,"column":2,"nodeType":"105","messageId":"106","endLine":3,"endColumn":11},{"ruleId":"103","severity":1,"message":"121","line":4,"column":2,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":5,"column":2,"nodeType":"105","messageId":"106","endLine":5,"endColumn":6},{"ruleId":"103","severity":1,"message":"123","line":6,"column":2,"nodeType":"105","messageId":"106","endLine":6,"endColumn":6},{"ruleId":"103","severity":1,"message":"124","line":7,"column":2,"nodeType":"105","messageId":"106","endLine":7,"endColumn":11},{"ruleId":"103","severity":1,"message":"125","line":8,"column":2,"nodeType":"105","messageId":"106","endLine":8,"endColumn":12},{"ruleId":"103","severity":1,"message":"126","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":13},{"ruleId":"103","severity":1,"message":"127","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"119","line":7,"column":2,"nodeType":"105","messageId":"106","endLine":7,"endColumn":8},{"ruleId":"103","severity":1,"message":"120","line":8,"column":2,"nodeType":"105","messageId":"106","endLine":8,"endColumn":11},{"ruleId":"103","severity":1,"message":"121","line":9,"column":2,"nodeType":"105","messageId":"106","endLine":9,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":10,"column":2,"nodeType":"105","messageId":"106","endLine":10,"endColumn":6},{"ruleId":"103","severity":1,"message":"123","line":11,"column":2,"nodeType":"105","messageId":"106","endLine":11,"endColumn":6},{"ruleId":"103","severity":1,"message":"124","line":12,"column":2,"nodeType":"105","messageId":"106","endLine":12,"endColumn":11},{"ruleId":"103","severity":1,"message":"125","line":13,"column":2,"nodeType":"105","messageId":"106","endLine":13,"endColumn":12},{"ruleId":"110","severity":1,"message":"128","line":36,"column":5,"nodeType":"112","endLine":36,"endColumn":7,"suggestions":"129"},{"ruleId":"103","severity":1,"message":"130","line":54,"column":8,"nodeType":"105","messageId":"106","endLine":54,"endColumn":14},{"ruleId":"103","severity":1,"message":"127","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":16},{"ruleId":"103","severity":1,"message":"131","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":15},{"ruleId":"103","severity":1,"message":"132","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"133","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"134","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":17},{"ruleId":"103","severity":1,"message":"131","line":4,"column":19,"nodeType":"105","messageId":"106","endLine":4,"endColumn":24},{"ruleId":"103","severity":1,"message":"135","line":4,"column":26,"nodeType":"105","messageId":"106","endLine":4,"endColumn":43},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["136"],["137"],"'Home' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'currentUser' is assigned a value but never used.","'new_page' is assigned a value but never used.","'setNew_page' is assigned a value but never used.",["139"],["140"],"'Button' is defined but never used.","'Container' is defined but never used.","'FormControl' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'index' is assigned a value but never used.","'render' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'text', and 'title'. Either include them or remove the dependency array.",["141"],"'update' is assigned a value but never used.","'notes' is assigned a value but never used.","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'selectedNoteIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"142","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [props.history]",{"range":"148","text":"149"},{"range":"150","text":"149"},{"range":"151","text":"149"},"Update the dependencies array to be: [body, text, title]",{"range":"152","text":"153"},[655,657],"[props.history]",[1386,1388],[504,506],[943,945],"[body, text, title]"]