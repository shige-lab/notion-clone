{"ast":null,"code":"var _jsxFileName = \"/Users/shige11910/notion-clone/frontend/src/Editor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorApp(props) {\n  _s();\n\n  // const [title, setTitle] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n  // const note = props.note;\n  const noteUpdate = props.noteUpdate; // const { id, title, body } = note;\n\n  const body = props.note.body;\n  const title = props.note.title;\n  const id = props.note.id;\n  const [text, setText] = useState(body);\n  const [title_, setTitle_] = useState(title);\n  console.log(title);\n  console.log(title_);\n  console.log(body);\n  console.log(text); // useEffect(() => {\n  // \tsetText(body);\n  // \tconsole.log(text);\n  // }, []);\n\n  const updateTitle = t => {\n    setTitle_(t);\n    console.log(title_); // update();\n  };\n\n  const updateBody = content => {\n    setText(content);\n    console.log(text); // update();\n  }; // const update = () => {\n  // \tnoteUpdate(id, {\n  //     id,\n  //     title,\n  // \t\tbody: text,\n  // \t});\n  // };\n\n\n  const update = _.debounce(() => {\n    noteUpdate(id, {\n      id,\n      title: title_,\n      body: text\n    });\n  }, 1500);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // className={classes.titleInput}\n      placeholder: \"Untitled\",\n      value: title_ ? title_ : \"\",\n      onChange: e => updateTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextField // className={classes.titleInput}\n    , {\n      placeholder: \"content\",\n      value: text ? text : \"\",\n      onChange: event => {\n        updateBody(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n\n_s(EditorApp, \"3JPMdQhIhjjy49akwFDyqg7N/X4=\");\n\n_c = EditorApp;\nexport default EditorApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorApp\");","map":{"version":3,"sources":["/Users/shige11910/notion-clone/frontend/src/Editor.tsx"],"names":["React","useState","_","TextField","EditorApp","props","noteUpdate","body","note","title","id","text","setText","title_","setTitle_","console","log","updateTitle","t","updateBody","content","update","debounce","e","target","value","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAMCC,SAND,QAQO,mBARP;;;AAUA,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AAC9B;AACA;AACA;AACA,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB,CAJ8B,CAK9B;;AACA,QAAMC,IAAY,GAAGF,KAAK,CAACG,IAAN,CAAWD,IAAhC;AACA,QAAME,KAAa,GAAGJ,KAAK,CAACG,IAAN,CAAWC,KAAjC;AACA,QAAMC,EAAU,GAAGL,KAAK,CAACG,IAAN,CAAWE,EAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAASM,IAAT,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAASQ,KAAT,CAApC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAd8B,CAgB9B;AACA;AACA;AACA;;AACA,QAAMM,WAAW,GAAIC,CAAD,IAAe;AAClCJ,IAAAA,SAAS,CAACI,CAAD,CAAT;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAFkC,CAGlC;AACA,GAJD;;AAKA,QAAMM,UAAU,GAAIC,OAAD,IAAqB;AACvCR,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAFuC,CAGvC;AACA,GAJD,CAzB8B,CA8B9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMU,MAAM,GAAGnB,CAAC,CAACoB,QAAF,CAAW,MAAM;AAC/BhB,IAAAA,UAAU,CAACI,EAAD,EAAK;AACdA,MAAAA,EADc;AAEdD,MAAAA,KAAK,EAAEI,MAFO;AAGdN,MAAAA,IAAI,EAAEI;AAHQ,KAAL,CAAV;AAKA,GANc,EAMZ,IANY,CAAf;;AAQA,sBACC;AAAA,4BACC;AACC;AACA,MAAA,WAAW,EAAC,UAFb;AAGC,MAAA,KAAK,EAAEE,MAAM,GAAGA,MAAH,GAAY,EAH1B;AAIC,MAAA,QAAQ,EAAGU,CAAD,IAAON,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADD,eAWC,QAAC,SAAD,CACC;AADD;AAEC,MAAA,WAAW,EAAC,SAFb;AAGC,MAAA,KAAK,EAAEd,IAAI,GAAGA,IAAH,GAAU,EAHtB;AAIC,MAAA,QAAQ,EAAGe,KAAD,IAAgD;AACzDP,QAAAA,UAAU,CAACO,KAAK,CAACF,MAAN,CAAaC,KAAd,CAAV;AACA;AANF;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA;;GAnEQrB,S;;KAAAA,S;AAqET,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport _ from \"lodash\";\nimport { render } from \"@testing-library/react\";\nimport {\n\tButton,\n\tContainer,\n\tFormControl,\n\tGrid,\n\tLink,\n\tTextField,\n\tTypography,\n} from \"@material-ui/core\";\n\nfunction EditorApp(props: any) {\n\t// const [title, setTitle] = useState(\"\");\n\t// const [id, setId] = useState(\"\");\n\t// const note = props.note;\n\tconst noteUpdate = props.noteUpdate;\n\t// const { id, title, body } = note;\n\tconst body: string = props.note.body;\n\tconst title: string = props.note.title;\n\tconst id: string = props.note.id;\n\tconst [text, setText] = useState<string>(body);\n\tconst [title_, setTitle_] = useState<string>(title);\n\tconsole.log(title);\n\tconsole.log(title_);\n\tconsole.log(body);\n\tconsole.log(text);\n\n\t// useEffect(() => {\n\t// \tsetText(body);\n\t// \tconsole.log(text);\n\t// }, []);\n\tconst updateTitle = (t: string) => {\n\t\tsetTitle_(t);\n\t\tconsole.log(title_);\n\t\t// update();\n\t};\n\tconst updateBody = (content: string) => {\n\t\tsetText(content);\n\t\tconsole.log(text);\n\t\t// update();\n\t};\n\t// const update = () => {\n\t// \tnoteUpdate(id, {\n\t//     id,\n\t//     title,\n\t// \t\tbody: text,\n\t// \t});\n\t// };\n\tconst update = _.debounce(() => {\n\t\tnoteUpdate(id, {\n\t\t\tid,\n\t\t\ttitle: title_,\n\t\t\tbody: text,\n\t\t});\n\t}, 1500);\n\n\treturn (\n\t\t<div>\n\t\t\t<input\n\t\t\t\t// className={classes.titleInput}\n\t\t\t\tplaceholder=\"Untitled\"\n\t\t\t\tvalue={title_ ? title_ : \"\"}\n\t\t\t\tonChange={(e) => updateTitle(e.target.value)}\n\t\t\t/>\n\t\t\t{/* <ReactQuill\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={props.noteUpdate(note.id, note)}\n\t\t\t></ReactQuill> */}\n\t\t\t<TextField\n\t\t\t\t// className={classes.titleInput}\n\t\t\t\tplaceholder=\"content\"\n\t\t\t\tvalue={text ? text : \"\"}\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tupdateBody(event.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default EditorApp;\n"]},"metadata":{},"sourceType":"module"}