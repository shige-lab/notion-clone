{"ast":null,"code":"var _jsxFileName = \"/Users/shige11910/notion-clone/frontend/src/App2.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App2 = () => {\n  _s();\n\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState([]);\n  React.useEffect(() => {\n    firebase.firestore().collection('notes').onSnapshot(serverUpdate => {\n      const notes = serverUpdate.docs.map(doc => {\n        const data = doc.data();\n        data['id'] = doc.id;\n        return data;\n      });\n      setNotes(notes);\n      console.log(notes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App2, \"fCzRziA31gw/SS3TYPv6RKUvOWs=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["/Users/shige11910/notion-clone/frontend/src/App2.tsx"],"names":["React","useState","firebase","App2","selectedNoteIndex","setSelectedNoteIndex","selectedNote","setSelectedNote","notes","setNotes","useEffect","firestore","collection","onSnapshot","serverUpdate","docs","map","doc","data","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACC,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAoC,EAApC,CAAlC;AAGAD,EAAAA,KAAK,CAACU,SAAN,CAAiB,MAAM;AACtBR,IAAAA,QAAQ,CACJS,SADJ,GAEIC,UAFJ,CAEe,OAFf,EAGIC,UAHJ,CAGeC,YAAY,IAAI;AAC9B,YAAMN,KAAK,GAAGM,YAAY,CAACC,IAAb,CAAkBC,GAAlB,CAAsBC,GAAG,IAAI;AAC1C,cAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AAEAA,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaD,GAAG,CAACE,EAAjB;AAEA,eAAOD,IAAP;AACD,OANc,CAAd;AAQDT,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,KAdA;AAeD,GAhBA,EAgBE,EAhBF;AAiBD,sBACC;AAAA,cACEA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA7BD;;GAAML,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport firebase from \"firebase\";\nimport { render } from \"@testing-library/react\";\n\nconst App2 = () => {\n\n\tconst [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n\tconst [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState<firebase.firestore.DocumentData[]>([]);\n  \n  \n  React.useEffect (() => {\n\t  firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n\t\t  const notes = serverUpdate.docs.map(doc => {\n\t\t\t  const data = doc.data();\n\t\t\t  \n\t\t\t  data['id'] = doc.id;\n\t\t\t  \n\t\t\t  return data;\n\t\t\t});\n\t\t\t\n\t\t\tsetNotes(notes);\n\t\t\tconsole.log(notes);\n\t\t});\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t{notes}\n\t\t</div>\n\t);\n}\n\nexport default App2;"]},"metadata":{},"sourceType":"module"}