{"ast":null,"code":"var _jsxFileName = \"/Users/shige11910/notion-clone/frontend/src/Editor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"draft-js/dist/Draft.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorApp(props) {\n  _s();\n\n  const [text, setText] = useState(\"\"); // const [title, setTitle] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n\n  const [notes, setNotes] = useState([]);\n\n  const updateBody = async val => {\n    await setText(val);\n    console.log(text);\n  };\n\n  console.log(note.title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // className={classes.titleInput}\n      placeholder: \"\\u30CE\\u30FC\\u30C8\\u306E\\u30BF\\u30A4\\u30C8\\u30EB\" // value={note.title ? note.title : \"\"}\n      // onChange={(e) => this.updateTitle(e.target.value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: text,\n      onChange: updateBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(EditorApp, \"c+GHs6zsL0QDsbvDwOy032VtQTQ=\");\n\n_c = EditorApp;\nexport default EditorApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorApp\");","map":{"version":3,"sources":["/Users/shige11910/notion-clone/frontend/src/Editor.tsx"],"names":["React","useState","ReactQuill","EditorApp","props","text","setText","notes","setNotes","updateBody","val","console","log","note","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAQA,OAAO,yBAAP;;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAD8B,CAE9B;AACA;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAoC,EAApC,CAAlC;;AACA,QAAMQ,UAAU,GAAG,MAAOC,GAAP,IAAuB;AACzC,UAAMJ,OAAO,CAACI,GAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,GAHD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAjB;AACA,sBACC;AAAA,4BACC;AACC;AACA,MAAA,WAAW,EAAC,kDAFb,CAGC;AACA;;AAJD;AAAA;AAAA;AAAA;AAAA,YADD,eAOC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAET,IAAnB;AAAyB,MAAA,QAAQ,EAAEI;AAAnC;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GArBQN,S;;KAAAA,S;AAuBT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport {\n\tEditor,\n\tEditorState,\n\tRichUtils,\n\tconvertToRaw,\n\tContentState,\n} from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { render } from \"@testing-library/react\";\n\nfunction EditorApp(props: any) {\n\tconst [text, setText] = useState(\"\");\n\t// const [title, setTitle] = useState(\"\");\n\t// const [id, setId] = useState(\"\");\n\tconst [notes, setNotes] = useState<firebase.firestore.DocumentData[]>([]);\n\tconst updateBody = async (val: string) => {\n\t\tawait setText(val);\n\t\tconsole.log(text);\n\t};\n\tconsole.log(note.title);\n\treturn (\n\t\t<div>\n\t\t\t<input\n\t\t\t\t// className={classes.titleInput}\n\t\t\t\tplaceholder=\"ノートのタイトル\"\n\t\t\t\t// value={note.title ? note.title : \"\"}\n\t\t\t\t// onChange={(e) => this.updateTitle(e.target.value)}\n\t\t\t/>\n\t\t\t<ReactQuill value={text} onChange={updateBody}></ReactQuill>\n\t\t</div>\n\t);\n}\n\nexport default EditorApp;\n"]},"metadata":{},"sourceType":"module"}