{"ast":null,"code":"var _jsxFileName = \"/Users/shige11910/notion-clone/frontend/src/Editor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorApp() {\n  _s();\n\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  console.log(editorState);\n\n  const onBoldClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n    console.log(editorState);\n  };\n\n  const onItalicClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'ITALIC'));\n  };\n\n  const onUnderlineClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBoldClick.bind(editorState),\n      children: \"Bold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onItalicClick.bind(editorState),\n      children: \"Italic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUnderlineClick.bind(editorState),\n      children: \"Underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: setEditorState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditorApp, \"TAqHOLwwmW8k3h3WdII2KbElU4o=\");\n\n_c = EditorApp;\nexport default EditorApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorApp\");","map":{"version":3,"sources":["/Users/shige11910/notion-clone/frontend/src/Editor.tsx"],"names":["React","useState","Editor","EditorState","RichUtils","EditorApp","editorState","setEditorState","createEmpty","console","log","onBoldClick","toggleInlineStyle","onItalicClick","onUnderlineClick","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA6C,UAA7C;AACA,OAAO,yBAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAC5C,MAAME,WAAW,CAACK,WAAZ,EADsC,CAA9C;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AACA,QAAMK,WAAW,GAAG,MAAM;AACxBJ,IAAAA,cAAc,CAACH,SAAS,CAACQ,iBAAV,CAA4BN,WAA5B,EAAyC,MAAzC,CAAD,CAAd;AACHG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACE,GAHD;;AAIA,QAAMO,aAAa,GAAG,MAAM;AAC1BN,IAAAA,cAAc,CAACH,SAAS,CAACQ,iBAAV,CAA4BN,WAA5B,EAAyC,QAAzC,CAAD,CAAd;AACD,GAFD;;AAGA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,cAAc,CAACH,SAAS,CAACQ,iBAAV,CAA4BN,WAA5B,EAAyC,WAAzC,CAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACF;AAAQ,MAAA,OAAO,EAAEK,WAAW,CAACI,IAAZ,CAAiBT,WAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAEI;AAAQ,MAAA,OAAO,EAAEO,aAAa,CAACE,IAAd,CAAmBT,WAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEQ,gBAAgB,CAACC,IAAjB,CAAsBT,WAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIC,QAAC,MAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,QAAQ,EAAEC;AAFZ;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BQF,S;;KAAAA,S;AA8BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Editor, EditorState, RichUtils} from 'draft-js'\nimport 'draft-js/dist/Draft.css';\n\nfunction EditorApp() {\n  const [editorState, setEditorState] = useState(\n    () => EditorState.createEmpty(),\n  );\n  \n  console.log(editorState);\n  const onBoldClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n\tconsole.log(editorState);\n  }\n  const onItalicClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'ITALIC'));\n  }\n  const onUnderlineClick = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n  }\n\n  return (\n    <div className=\"wrapper\">\n\t <button onClick={onBoldClick.bind(editorState)}>Bold</button>\n        <button onClick={onItalicClick.bind(editorState)}>Italic</button>\n        <button onClick={onUnderlineClick.bind(editorState)}>Underline</button>\n     <Editor \n       editorState={editorState}\n       onChange={setEditorState} \n     />\n    </div>\n  );\n}\n\nexport default EditorApp;"]},"metadata":{},"sourceType":"module"}