{"ast":null,"code":"var _jsxFileName = \"/Users/shige11910/notion-clone/frontend/src/Home1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { auth, db } from \"./firebase\";\nimport \"./Home.css\";\nimport Content from \"./Content\";\nimport EditorApp from \"./Editor\";\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [new_page, setNew_page] = useState(false);\n  const [notes, setNotes] = useState([{\n    id: \"\",\n    title: \"\",\n    body: \"\"\n  }]);\n  const [note, setNote] = useState({\n    id: \"\",\n    title: \"\",\n    body: \"\"\n  }); // const [notes, setNotes] = useState<firebase.firestore.DocumentData[]>([]);\n  // const [selectedNoteIndex, setSelectedNoteIndex] = useState(Number);\n  // const [selectedNote, setSelectedNote] = useState([\n  // \t{ id: \"\", title: \"\", body: \"\" },\n  // ]);\n\n  const HandleOnclick = () => {\n    // setNew_page(true);\n    // console.log(new_page);\n    newNote(\"Untitled\");\n  };\n\n  useEffect(() => {\n    // if not logged in, redirect to login page\n    auth.onAuthStateChanged(user => {\n      user ? setCurrentUser(user) : props.history.push(\"/login\");\n      const unSub = db.collection(\"notes\").onSnapshot(serverUpdate => {\n        setNotes(serverUpdate.docs.map(doc => ({\n          id: doc.id,\n          title: doc.data().title,\n          body: doc.data().body\n        })));\n        return () => unSub();\n      }); // setNotes(notes);\n      // console.log(notes);\n    });\n  }, []);\n\n  const selectNote = SelectedNote => {\n    // console.log(note.title);\n    setNote(SelectedNote); // setNote([\n    // \t{\n    // \t\tid: SelectedNote.id,\n    // \t\ttitle: SelectedNote.title,\n    // \t\tbody: SelectedNote.body,\n    // \t},\n    // ]);\n    // console.log(SelectedNote.body);\n    // console.log(SelectedNote.title);\n    // console.log(SelectedNote.id);\n    // console.log(note[\"body\"]);\n    // console.log(note[\"title\"]);\n    // console.log(note.id);\n  };\n\n  const newNote = async title => {\n    const note = {\n      title,\n      body: \"\"\n    };\n    const newFromDB = await firebase.firestore().collection(\"notes\").add({\n      title: note.title,\n      body: note.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    const newID = newFromDB.id; // console.log(newID);\n\n    await setNotes([{\n      id: newID,\n      title: note.title,\n      body: note.body\n    }]); // const newNoteIndex = notes.indexOf(\n    // \tnotes.filter((_note) => _note.id === newID)[0]\n    // );\n    // setSelectedNote(notes[newNoteIndex]);\n    // setSelectedNoteIndex(newNoteIndex);\n  };\n\n  const noteUpdate = (id, noteObj) => {\n    console.log(noteObj.body);\n    db.collection(\"notes\").doc(id).update({\n      title: noteObj.title,\n      body: noteObj.body // id: noteObj.id,\n      // timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\n    });\n  };\n\n  const deleteNote = async note => {\n    // await this.setState({\n    // \tnotes: this.state.notes.filter((_note) => _note !== note),\n    // });\n    // // const noteIndex = notes.indexOf(note);\n    // if (selectedNoteIndex === noteIndex) {\n    // \tthis.deselectNote();\n    // } else {\n    // \tnotes.length > 0\n    // \t\t? this.selectNote(\n    // \t\t\t\tnotes[selectedNoteIndex - 1],\n    // \t\t\t\tselectedNoteIndex - 1\n    // \t\t  )\n    // \t\t: this.deselectNote();\n    // }\n    db.collection(\"notes\").doc(note.id).delete();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Home_header\",\n        children: \"notion clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Heme_logout\",\n        onClick: async event => {\n          try {\n            await auth.signOut();\n            props.history.push(\"/login\");\n          } catch (error) {\n            alert(error);\n          }\n        },\n        style: {\n          marginTop: \"0.5em\",\n          marginBottom: \"0.5em\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Home_main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"List\",\n          children: [\"list\", notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Content, {\n              note: note,\n              index: index,\n              selectNote: selectNote,\n              deleteNote: deleteNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 8\n          }, this)), /*#__PURE__*/_jsxDEV(List, {\n            newNote: newNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contents\",\n          children: note && /*#__PURE__*/_jsxDEV(EditorApp, {\n            note: note,\n            noteUpdate: noteUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Home_newpage\",\n        onClick: HandleOnclick,\n        children: \"+ New Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"CIDg/soCqlhiVXS6/ZoXwkFcf3o=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/shige11910/notion-clone/frontend/src/Home1.tsx"],"names":["React","Fragment","useEffect","useState","firebase","auth","db","Content","EditorApp","List","Home","props","currentUser","setCurrentUser","new_page","setNew_page","notes","setNotes","id","title","body","note","setNote","HandleOnclick","newNote","onAuthStateChanged","user","history","push","unSub","collection","onSnapshot","serverUpdate","docs","map","doc","data","selectNote","SelectedNote","newFromDB","firestore","add","timestamp","FieldValue","serverTimestamp","newID","noteUpdate","noteObj","console","log","update","deleteNote","delete","event","signOut","error","alert","marginTop","marginBottom","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { auth, db } from \"./firebase\";\nimport \"./Home.css\";\nimport Content from \"./Content\";\nimport EditorApp from \"./Editor\";\nimport List from \"./List\";\n\nconst Home = (props: any) => {\n\tconst [currentUser, setCurrentUser] = useState<null | object>(null);\n\tconst [new_page, setNew_page] = useState(false);\n\tconst [notes, setNotes] = useState([{ id: \"\", title: \"\", body: \"\" }]);\n\tconst [note, setNote] = useState({ id: \"\", title: \"\", body: \"\" });\n\n\t// const [notes, setNotes] = useState<firebase.firestore.DocumentData[]>([]);\n\t// const [selectedNoteIndex, setSelectedNoteIndex] = useState(Number);\n\t// const [selectedNote, setSelectedNote] = useState([\n\t// \t{ id: \"\", title: \"\", body: \"\" },\n\t// ]);\n\n\tconst HandleOnclick = () => {\n\t\t// setNew_page(true);\n\t\t// console.log(new_page);\n\t\tnewNote(\"Untitled\");\n\t};\n\tuseEffect(() => {\n\t\t// if not logged in, redirect to login page\n\t\tauth.onAuthStateChanged((user) => {\n\t\t\tuser ? setCurrentUser(user) : props.history.push(\"/login\");\n\n\t\t\tconst unSub = db.collection(\"notes\").onSnapshot((serverUpdate) => {\n\t\t\t\tsetNotes(\n\t\t\t\t\tserverUpdate.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\ttitle: doc.data().title,\n\t\t\t\t\t\tbody: doc.data().body,\n\t\t\t\t\t}))\n\t\t\t\t);\n\n\t\t\t\treturn () => unSub();\n\t\t\t});\n\n\t\t\t// setNotes(notes);\n\t\t\t// console.log(notes);\n\t\t});\n\t}, []);\n\n\tconst selectNote = (SelectedNote: any) => {\n\t\t// console.log(note.title);\n\t\tsetNote(SelectedNote);\n\t\t// setNote([\n\t\t// \t{\n\t\t// \t\tid: SelectedNote.id,\n\t\t// \t\ttitle: SelectedNote.title,\n\t\t// \t\tbody: SelectedNote.body,\n\t\t// \t},\n\t\t// ]);\n\t\t// console.log(SelectedNote.body);\n\t\t// console.log(SelectedNote.title);\n\t\t// console.log(SelectedNote.id);\n\t\t// console.log(note[\"body\"]);\n\t\t// console.log(note[\"title\"]);\n\t\t// console.log(note.id);\n\t};\n\n\tconst newNote = async (title: string) => {\n\t\tconst note = {\n\t\t\ttitle,\n\t\t\tbody: \"\",\n\t\t};\n\t\tconst newFromDB = await firebase.firestore().collection(\"notes\").add({\n\t\t\ttitle: note.title,\n\t\t\tbody: note.body,\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t});\n\n\t\tconst newID = newFromDB.id;\n\t\t// console.log(newID);\n\n\t\tawait setNotes([{ id: newID, title: note.title, body: note.body }]);\n\t\t// const newNoteIndex = notes.indexOf(\n\t\t// \tnotes.filter((_note) => _note.id === newID)[0]\n\t\t// );\n\n\t\t// setSelectedNote(notes[newNoteIndex]);\n\t\t// setSelectedNoteIndex(newNoteIndex);\n\t};\n\tconst noteUpdate = (id: string, noteObj: any) => {\n\t\tconsole.log(noteObj.body);\n\t\tdb.collection(\"notes\").doc(id).update({\n\t\t\ttitle: noteObj.title,\n\t\t\tbody: noteObj.body,\n\t\t\t// id: noteObj.id,\n\t\t\t// timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t});\n\t};\n\n\tconst deleteNote = async (note: any) => {\n\t\t// await this.setState({\n\t\t// \tnotes: this.state.notes.filter((_note) => _note !== note),\n\t\t// });\n\n\t\t// // const noteIndex = notes.indexOf(note);\n\n\t\t// if (selectedNoteIndex === noteIndex) {\n\t\t// \tthis.deselectNote();\n\t\t// } else {\n\t\t// \tnotes.length > 0\n\t\t// \t\t? this.selectNote(\n\t\t// \t\t\t\tnotes[selectedNoteIndex - 1],\n\t\t// \t\t\t\tselectedNoteIndex - 1\n\t\t// \t\t  )\n\t\t// \t\t: this.deselectNote();\n\t\t// }\n\n\t\tdb.collection(\"notes\").doc(note.id).delete();\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"Home\">\n\t\t\t\t<header className=\"Home_header\">notion clone</header>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"Heme_logout\"\n\t\t\t\t\tonClick={async (event) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait auth.signOut();\n\t\t\t\t\t\t\tprops.history.push(\"/login\");\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\talert(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n\t\t\t\t>\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t\t<div className=\"Home_main\">\n\t\t\t\t\t<div className=\"List\">\n\t\t\t\t\t\tlist\n\t\t\t\t\t\t{notes.map((note, index) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tselectNote={selectNote}\n\t\t\t\t\t\t\t\t\t\tdeleteNote={deleteNote}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{<List newNote={newNote} />}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"contents\">\n\t\t\t\t\t\t{note && (\n\t\t\t\t\t\t\t<EditorApp note={note} noteUpdate={noteUpdate} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"Home_newpage\" onClick={HandleOnclick}>\n\t\t\t\t\t+ New Page\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}